
# !!!!!!!!!!!!!!IMPORTANT!!!!!!!!!!!!!
# If you just get started use the demo configs on the solanamevbot.com website,
# DO NOT USE THIS FILE as your starting point. This file is for reference when adding new configs ONLY.


# SolanaMevBot Configuration. For detailed explanation of each configuration option,
# see https://docs.solanamevbot.com/home/fundamentals/bot-configurations

# (warning: sensitive information). Make sure you don't share it with anyone.
KEYS:
  PRIVATE_KEY: '' # You can use a JSON file or just a private key string
  HELIUS_API_KEY: '' # API key for Helius. Only needed if you use priorityFeePercentile
  CIRCULAR_API_KEY: '' # API key for Circular. Only needed if you use Circular API

# Yellowstone Configuration. This is optional. Yellowstone will be used for Jupiter if set.
YELLOWSTONE:
  YELLOWSTONE_URL: '' # Yellowstone API URL
  YELLOWSTONE_XTOKEN: '' # Yellowstone authentication token

# Jupiter Configuration
JUPITER:
  DISABLE_LOCAL_JUPITER: false # Disable local Jupiter instance
  JUPITER_RPC_URL: '' # Jupiter RPC URL. If not set the bot will use the RPC_URL
  JUPITER_URL: 'http://127.0.0.1:18080' # URL for Jupiter API
  JUP_MAX_ACCOUNTS: 24 # Maximum number of accounts in a single swap
  LOCAL_JUPITER_PORT: 18080 # Port for local Jupiter instance
  MARKET_MODE: 'remote' # 'remote' or 'europa' or 'file'. 'europa' is very RPC heavy and can cause issues with RPC nodes.
  USE_DIRECT_ROUTE_ONLY: true # Use only direct swap routes
  USE_LOCAL_MARKET_CACHE: false # Use local cache for market data
  WEBSERVER_THREAD_COUNT: 2
  UPDATE_THREAD_COUNT: 4
  ENABLE_CIRCULAR_MARKET_CACHE: false # Use Circular API to get market data, only supports up to 50 mints including base mints
  INCLUDED_DEXES:
    - '6EF8rrecthR5Dkzon8Nwu78hRvfCKubJ14M5uBEwF6P'
    - 'MoonCVVNZFSYkqNXP6bxHLPL6QQJiMagDL3qcqUQTrG'
  EXCLUDED_DEXES: # List of DEX program IDs to exclude
    - '6EF8rrecthR5Dkzon8Nwu78hRvfCKubJ14M5uBEwF6P'
    - 'MoonCVVNZFSYkqNXP6bxHLPL6QQJiMagDL3qcqUQTrG'

  JUPITER_API_KEY: '' # Jupiter API key, only needed if you use a 3rd party Jupiter instance like shyft
  SKIP_JUPITER_TOKEN_LIST_CHECK: false # Skip Jupiter token list check
  ADDITIONAL_JUPITER_URL_PARAMS: '' # Additional URL params to append to the Jupiter API URL

# Intermedium Mints Configuration
INTERMEDIUM_MINTS:
  INTERMEDIUM_MINT_COUNT_FROM_BIRDEYE: 0 # Number of top 24h volume tokens from Birdeye to use as intermediaries
  INTERMEDIUM_MINT_COUNT_FROM_BIRDEYE_TRENDING: 0 # Number of trending tokens from Birdeye to use as intermediaries
  INTERMEDIUM_MINT_COUNT_FROM_GECKO: 0 # Number of new tokens from Gecko to use as intermediaries
  INTERMEDIUM_MINT_COUNT_FROM_JUPITER: 0 #  You should only use this when you use a remote Jupiter instance. Number of new tokens from the Jupiter instance you connect to as intermediaries.
  INTERMEDIUM_MINT_FROM_FILE: '' # Json file containing a list of mints to use as intermediaries
  INTERMEDIUM_MINT_FROM_FILES: [] # List of json files containing a list of mints to use as intermediaries
  INTERMEDIUM_MINT_LIST: # List of mints to use as intermediaries
    - 'mint1'
    - 'mint2'
    - 'mint3'
  INTERMEDIUM_MINT_EXCLUDE_FROM_FILE: '' # Json file containing a list of mints to exclude as intermediaries
  INTERMEDIUM_MINT_FROM_ADDRESSES:
    MAX_MINT_COUNT: 10 # Maximum number of mints to extract from addresses
    ADDRESSES:
      - ADDRESS: 'address1'
        TX_COUNT_PER_ADDRESS: 100 # Number of latest transactions to check on start
        SUCCESSFUL_ONLY: true # Only consider successful transactions
        MAX_MINT_COUNT: 10 # Maximum number of mints to extract from addresses
      - ADDRESS: 'address2'
        TX_COUNT_PER_ADDRESS: 50
        MAX_MINT_COUNT: 10 # Maximum number of mints to extract from addresses
  INTERMEDIUM_MINT_FROM_CIRCULAR:
    MAX_TOKENS_LIST: 5 # Maximum number of tokens to fetch from Circular API
    MAX_TIME_RANGE: 900 # Maximum time range in seconds for the data to be fetched from Circular API
    TOKEN: 'So11111111111111111111111111111111111111112' # Base Token to fetch from Circular API
    EXCLUDE_TOKENS: # List of tokens to exclude from the fetched data, can be empty
      - 'So11111111111111111111111111111111111111112'
    PROVIDER: '' # Optional, Filter by provider list ("JITO", "FAST", "TEMPORAL", "BLOX", "NEXTBLOCK", "NO_PROVIDER")
  INTERMEDIUM_MINT_FILTER:
    MAX_MINT_COUNT: 10 # Maximum number of mints to keep 
    FILTER_METHOD: 'random' # Filter method, only 'random' is supported for now

# Bot Configuration
BOT:
  RPC_URL: 'https://api.mainnet-beta.solana.com' # Primary RPC endpoint. You should use your own private RPC endpoint.
  AUTO_RESTART: 0 # Automatically restart the bot after specified minutes (0 to disable)
  MAX_COMPUTE_TIME: 5000 # Maximum for total compute times in milliseconds
  MEMO: '' # Memo to include in transactions
  MIN_SOL_BALANCE: 0 # Minimum SOL balance to maintain in lamports
  ENABLE_SIMULATION: false # Simulate transactions before sending
  PULL_BLOCKHASH_WITH_YELLOWSTONE: false # Use Yellowstone for blockhash
  FIXED_COMPUTE_UNIT_LIMIT: 0 # Fixed compute unit limit (0 to use dynamic limit)
  COMPUTE_UNIT_LIMIT_MULTIPLIER: 1 # Compute unit limit multiplier, 1 is usually enough to cover 95% of the cases.
  ENABLE_JITO_RPC: false # Use Jito RPC endpoint. Only enable this if you know what you are doing.
  PAY_FEE_WITH_PROFIT: false # Pay fee with profit. Only works for SOL.
  JUPITER_WORKER_COUNT: 1 # Number of Jupiter worker threads
  MAX_WRAP_SOL_COMPUTE_UNIT_PRICE: 20_000_000 # Maximum compute unit price in micro lamports when wrapping/unwrapping SOL
  ENABLE_FIXED_SIZE_OPTIMIZATION: false # Enable fixed size optimization

  # Download Configuration
  DOWNLOAD_RPC_URL: '' # RPC URL used for downloading, when not set the bot will use RPC_URL
  DOWNLOAD_RPC_RATE_LIMIT_PER_SECOND: 0 # Rate limit for RPC in requests per second, 0 is no limit

# Spam Configuration
SPAM:
  ENABLE_SPAM: false # Using RPCs to send arbitrage transactions
  SPAM_RESTRICT_LEVEL: 0 # Spam restriction level (0-5). 0 is no restriction.
  SKIP_PREFLIGHT: true # Skip preflight transaction checks
  USE_DIFFERENT_TX_FOR_SENDERS: false # Use different transactions for each RPC sender
  MAX_RETRIES: 0 # Maximum number of retries for failed operations
  PRIORITY_FEE_STRATEGY: 'fixed' # Supported strategies: profit-based, fixed, helius. You can only use one of them.
  SEND_RPC_URLS: [] # RPC endpoints for transaction submission. You can use multiple RPC endpoints to increase the chance of success.

  # Only matter if you set PRIORITY_FEE_STRATEGY to helius
  PRIORITY_FEE_PERCENTILE: 50 # Priority fee percentile for priority fee transactions. Need Helius API key.
  PRIORITY_FEE_UPDATE_INTERVAL: 60 # Interval for updating priority fees in seconds

  # Only matter if you set PRIORITY_FEE_STRATEGY to profit-based
  SPAM_FEE_BPS: 500 # This allows you to set your gas fee to be a fixed percentage of the projected gain.

  # Only matter if you set PRIORITY_FEE_STRATEGY to fixed
  COMPUTE_UNIT_PRICE: 0 # Price per compute unit in micro-lamports

  MAX_COMPUTE_UNIT_PRICE: 100_000 # Maximum compute unit price in micro lamports
  MIN_COMPUTE_UNIT_PRICE: 0 # Minimum compute unit price in micro lamports

  # Bloxroute Configuration, Rate limit is 10/s if you use the default key. No limit for your own key.
  BLOXROUTE: 
    ENABLE_BLOXROUTE: false # Enable Bloxroute as a sending RPC. Note you need to also ENABLE_SPAM for this to work.
    BLOXROUTE_REGION: 'ny' # Bloxroute region. ny/uk/la/tokyo/germany/amsterdam
    BLOXROUTE_REGION_LIST: # If you want to send to multiple region for the same tx, you can use this.
      - ny
      - uk
    BLOXROUTE_FEE: 500_000 # Bloxroute fee in lamports, minimum is 500_000
    BLOXROUTE_KEY: '' # Bloxroute API key, when not set the bot will use the default key with a 10/s rate limit
    BLOXROUTE_DYNAMIC_FEE: false # Use dynamic fee for Bloxroute, will calculate the fee based on the projected profit similar to STATIC_TIP_BP in Jito.
    BLOXROUTE_DYNAMIC_FEE_BP: 0 # Dynamic fee in basis points, only works when BLOXROUTE_DYNAMIC_FEE is true. BP of the projected profit, similar to STATIC_TIP_BP in Jito.
    BLOXROUTE_MAX_DYNAMIC_FEE: 0 # Maximum dynamic fee in lamports, 0 to disable  
    BLOXROUTE_JITO_ONLY: false # Use Jito only for Bloxroute

  # Temporal Configuration
  TEMPORAL:
    ENABLE_TEMPORAL: false # Enable Temporal as a sending RPC. Note you need to also ENABLE_SPAM for this to work.
    TEMPORAL_REGION: ams1 # Temporal region. ams1/ewr1/pit1/fra2
    TEMPORAL_REGION_LIST: # If you want to send to multiple region for the same tx, you can use this.
      - ams1
      - ewr1
    TEMPORAL_FEE: 1_000_000 # Temporal fee in lamports, minimum is 1_000_000
    TEMPORAL_KEY: '' # Temporal API key, required to use Temporal
    TEMPORAL_DYNAMIC_FEE: false # Use dynamic fee for Temporal, will calculate the fee based on the projected profit similar to STATIC_TIP_BP in Jito.
    TEMPORAL_DYNAMIC_FEE_BP: 0 # Dynamic fee in basis points, only works when TEMPORAL_DYNAMIC_FEE is true. BP of the projected profit, similar to STATIC_TIP_BP in Jito.
    TEMPORAL_SHOW_SENDING_ERROR: true # Show error messages in logs
    TEMPORAL_MAX_DYNAMIC_FEE: 0 # Maximum dynamic fee in lamports, 0 to disable

  # Nextblock Configuration
  NEXTBLOCK:
    ENABLE_NEXTBLOCK: false # Enable Nextblock as a sending RPC. Note you need to also ENABLE_SPAM for this to work.
    NEXTBLOCK_REGION: ny # Nextblock region. ny/fra
    NEXTBLOCK_REGION_LIST: # If you want to send to multiple region for the same tx, you can use this.
      - ny
      - fra
    NEXTBLOCK_FEE: 1_000_000 # Nextblock fee in lamports, minimum is 1_000_000
    NEXTBLOCK_KEY: '' # Nextblock API key, required to use Nextblock
    NEXTBLOCK_DYNAMIC_FEE: false # Use dynamic fee for Nextblock, will calculate the fee based on the projected profit similar to STATIC_TIP_BP in Jito.
    NEXTBLOCK_DYNAMIC_FEE_BP: 0 # Dynamic fee in basis points, only works when NEXTBLOCK_DYNAMIC_FEE is true. BP of the projected profit, similar to STATIC_TIP_BP in Jito.
    NEXTBLOCK_SHOW_SENDING_ERROR: true # Show error messages in logs
    NEXTBLOCK_MAX_DYNAMIC_FEE: 0 # Maximum dynamic fee in lamports, 0 to disable
    NEXTBLOCK_JITO_ONLY: false # Use Jito only for Nextblock
    
  # Fast Configuration
  FAST:
    ENABLE_FAST: false # Enable Fast as a sending RPC. Note you need to also ENABLE_SPAM for this to work.
    FAST_FEE: 1_000_000 # Fast fee in lamports, minimum is 1_000_000
    FAST_DYNAMIC_FEE: false # Use dynamic fee for Fast, will calculate the fee based on the projected profit similar to STATIC_TIP_BP in Jito.
    FAST_DYNAMIC_FEE_BP: 0 # Dynamic fee in basis points, only works when FAST_DYNAMIC_FEE is true. BP of the projected profit, similar to STATIC_TIP_BP in Jito.
    FAST_SHOW_SENDING_ERROR: true # Show error messages in logs
    FAST_MAX_DYNAMIC_FEE: 0 # Maximum dynamic fee in lamports, 0 to disable
    FAST_JITO_ONLY: false # Use Jito only for Fast

# Jito Configuration
JITO:
  ENABLE_JITO: false # Use jito to send arbitrage transactions
  SHOW_JITO_LOGS: false # Show Jito landing logs
  JITO_UUID: '' # Jito user identifier.
  TIP_STRATEGIES: # Supported strategies: dynamic, static, fixed, fixed-list, static-list, fixed-range. You can use a combination of them.
    - dynamic
    - static
    - fixed
    - 'static-list'
    - 'fixed-list'
    - 'fixed-range'
  DYNAMIC_TIP_BP: 5000 # Jito tip in basis points. The value is dynamically calculated onchain.
  STATIC_TIP_BP: 0 # Jito tip in basis points. The value is calculated based on the projected profit.
  FIXED_TIP: 0 # Fixed tip in lamports.
  FIXED_TIP_LIST:
    - 10_000_000
    - 100_000_000
    - 1_000_000_000
  STATIC_TIP_BP_LIST:
    - 5000
    - 7000
    - 9000
  FIXED_TIP_RANGE:
    FROM: 100_000
    TO: 10_000_000_000
  FIXED_TIP_RANGE_COUNT: 5
  FIXED_TIP_RANGE_STRATEGY: 'random' # Strategy for distributing tip sizes. Valid values: random, exponential, linear
  MAX_TIP: 1_000_000_000 # Maximum tip in lamports. If 0 the bot will use 80% of the wallet balance as the max tip.
  USE_SEPARATE_TIP_ACCOUNT: false # Use a separate account for tips
  USE_DIFFERENT_TX_FOR_BLOCK_ENGINES: true # Use different transactions for each block engine
  USE_DIFFERENT_TIP_ACCOUNT_FOR_BLOCK_ENGINES: false # Use different tip accounts for each block engine
  BLOCK_ENGINES: # List of block engines to use
    - 'ny'
    - 'amsterdam'
    - 'frankfurt'
    - 'tokyo'
    - 'slc'

  ENABLE_MULTIPLE_IP_ADDRESSES_FOR_JITO: false # Use multiple addresses to send jito transactions. You need to have your ip setup correctly on your machine first to utilize this.
  START_IP: '1.1.1.1' # Optional. When set bot will use the IPV4 ip start from this ip
  END_IP: '1.1.1.6'  # Optional. When set bot will use the IPV4 ip end with this ip
  IP_LIST: # Optional. If you want to set multiple ips manually, you can use this.
    - 1.1.1.1
    - 2.2.2.2

# Flashloan Configuration
FLASHLOAN:
  ENABLE_FLASHLOAN: false # Enable flashloan functionality
  FLASHLOAN_PROVIDER: 'kamino' # Flashloan provider. Currently supported: solend, kamino
  WRAP_SOL_AMOUNT: 0 # Amount of SOL to wrap in lamports

# Logging Configuration
LOGGING:
  DEBUG: false # Enable debug mode for additional logging
  HIDE_ERROR: false # Hide error messages in logs
  ENABLE_LANDING_LOG: false # Enable logging of landing transactions
  ENABLE_SENDING_LOG: true # Enable logging of sending transactions

# Blind Quote Strategy Configuration
# How blind quote strategy works:
# 1. Bot will use the trade size you defined in this config to quote for all the intermedium mints you defined, both to buy and sell.
# 2. If a buy and sell quote has profit and it's higher than the MIN_QUOTE_PROFIT you defined here, it will send out tx try to catch it
BLIND_QUOTE_STRATEGY:
  ENABLE_BLIND_QUOTE_STRATEGY: true # Enable blind quote strategy
  MEMO: '' # Memo override for the blind quote strategy
  SKIP_SAME_OPPORTUNITY: false # Skip duplicate arbitrage opportunities
  BASE_MINTS:
    - MINT: So11111111111111111111111111111111111111112 # Wrapped SOL
      TRADE_RANGE:
        FROM: 1_000_000_000  # 1 SOL
        TO: 10_000_000_000   # 10 SOL
      PROCESS_DELAY: 1000 # Delay between processing a new round of routes and checking for new opportunities in milliseconds
      TRADE_RANGE_COUNT: 5   # Number of trade sizes within the range
      TRADE_RANGE_STRATEGY: 'random' # Strategy for distributing trade sizes. Valid values: random, exponential, linear
      MIN_QUOTE_PROFIT: 1_000_000 # Minimum profit in lamports
      MIN_SIMULATED_PROFIT: 100_000 # Minimum profit in lamports for the simulated profit
      SKIP_PROFIT_CHECK_FOR_QUOTE: false # Skip profit check for the quote, jup quote can be very inaccurate sometimes, you can use this together with simulation to get the actual profit
      ROUTE_TYPES: # List of route types to use
        - 2hop
        - 3hop
      THREE_HOP_MINTS: # List of mints to use for 3hop route
        - EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v


    # You can also use USDC/USDT as base mints, or config a different strategy for the same mint multiple times.
    - MINT: EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v # USDC
      TRADE_SIZES: 
        - 50_000_000
        - 500_000_000 # Trade size in USDC (6 decimals)
      MIN_QUOTE_PROFIT: 5000 # Minimum profit in USDC (6 decimals)
      PROCESS_DELAY: 1000 # Delay between processing a new round of routes and checking for new opportunities in milliseconds
      MIN_SIMULATED_PROFIT: 5000 # Minimum profit in lamports for the simulated profit
      SKIP_PROFIT_CHECK_FOR_QUOTE: false # Skip profit check for the quote, jup quote can be very inaccurate sometimes, you can use this together with simulation to get the actual profit

    - MINT: Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB # USDT
      TRADE_SIZES: 
        - 50_000_000
        - 500_000_000 # Trade size in USDT (6 decimals)
      MIN_QUOTE_PROFIT: 5000 # Minimum profit in USDT (6 decimals)
      PROCESS_DELAY: 1000 # Delay between processing a new round of routes and checking for new opportunities in milliseconds
      MIN_SIMULATED_PROFIT: 5000 # Minimum profit in lamports for the simulated profit
      SKIP_PROFIT_CHECK_FOR_QUOTE: false # Skip profit check for the quote, jup quote can be very inaccurate sometimes, you can use this together with simulation to get the actual profit

# Backrun Strategy Configuration
# How backrun strategy works:
# 1. Bot will monitor the markets you defined in DEXES_TO_MONITOR, with all the intermedium mints you defined above
# 2. If the pool's price moved more than MIN_PRICE_IMPACT_PCT, bot will try to create a trade to backrun it
# 3. Bot will use the trade size you defined in TRADE_CONFIGS, to randomly generate a size between MIN_TRADE_BP 
#    and MAX_TRADE_BP, based on the trade you are back running
# 4. Bot will quote the other size of the trade with jupiter, create a full arb trade tx
# 5. If the tx has profit and it's higher than MIN_QUOTE_PROFIT, bot will send it out
BACKRUN_STRATEGY:
  ENABLE_BACKRUN_STRATEGY: false # Enable backrun strategy
  MEMO: '' # Memo override for the backrun strategy
  SLOT_MEMO: true # Add the backrun tx's slot to the memo, useful to see how far you landed your backrun tx.
  DEXES_TO_MONITOR: # List of DEXes to monitor. Valid values: Raydium, Whirlpool, RaydiumCLMM, Meteora, MeteoraDLMM
    - Raydium
    - Whirlpool
    - RaydiumCLMM
    - Meteora
    - MeteoraDLMM
    - SolFi
    - LifinityV2
  MIN_PRICE_IMPACT_PCT: 0.1 # Minimum price impact in percentage, for the pool you are monitoring. Bot will only backrun trades that caused the price to move more than this percentage.
  BASE_MINTS: # List of base mints to use for the backrun. Currently only SOL and USDC are supported.
    - MINT: So11111111111111111111111111111111111111112
      MIN_QUOTE_PROFIT: 100_000 # Minimum profit in lamports for the quote
      MIN_SIMULATED_PROFIT: 100_000 # Minimum profit in lamports for the simulated profit
      SKIP_PROFIT_CHECK_FOR_QUOTE: false # Skip profit check for the quote, jup quote can be very inaccurate sometimes, you can use this together with simulation to get the actual profit
      MIN_TRADE_SIZE: 500_000_000 # Minimum trade size in lamports, if the generated trade size is less than this bot will skip the trade
      MAX_TRADE_SIZE: 150_000_000_000 # Maximum trade size in lamports, if the generated trade size is more than this bot will cap it at this size
      SENDING_COOLDOWN: 0 # If one opportunity is found and tx is sent out, wait at least this time(ms) before sending another one.
      TRADE_CONFIGS: # List of trade configs to use for the backrun. You can define multiple configs to backrun the same tx
        # Bot will randomly pick a trade size between MIN_TRADE_BP and MAX_TRADE_BP, based on the trade you are backrunning
        # Or you can define a FIXED_SIZE, bot will use this size for the backrun
        # You can define multiple configs, and bot will create different txs to backrun the same trade
        - MIN_TRADE_BP: 2000 # Min trade size in basis points
          MAX_TRADE_BP: 2000 # Max trade size in basis points
        - FIXED_SIZE: 100_000_000 # Fixed trade size in lamports. You should only define MIN/MAX or FIXED_SIZE, not both in the same config item.
      ROUTE_TYPES: # Currently only 2hop is supported
        - 2hop
    - MINT: EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v # USDC
      MIN_QUOTE_PROFIT: 100_000 # Minimum profit in lamports for the quote
      MIN_SIMULATED_PROFIT: 100_000 # Minimum profit in lamports for the simulated profit
      SKIP_PROFIT_CHECK_FOR_QUOTE: false # Skip profit check for the quote, jup quote can be very inaccurate sometimes, you can use this together with simulation to get the actual profit
      MIN_TRADE_SIZE: 500_000_000 # Minimum trade size in lamports, if the generated trade size is less than this bot will skip the trade
      MAX_TRADE_SIZE: 150_000_000_000 # Maximum trade size in lamports, if the generated trade size is more than this bot will cap it at this size
      TRADE_CONFIGS: # List of trade configs to use for the backrun. You can define multiple configs to backrun the same tx
        # Bot will randomly pick a trade size between MIN_TRADE_BP and MAX_TRADE_BP, based on the trade you are backrunning
        # You can define multiple configs, and bot will create different txs to backrun the same trade
        - MIN_TRADE_BP: 2000 # Min trade size in basis points
          MAX_TRADE_BP: 2000 # Max trade size in basis points
      ROUTE_TYPES: # Currently only 2hop is supported
        - 2hop
